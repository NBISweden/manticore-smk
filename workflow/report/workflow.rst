manticore-smk workflow results
==============================

manticore-smk_ is a Snakemake workflow for non model organism variant
calling and population genomics analyses. This analysis is based on
commit version {{ snakemake.config["__workflow_commit__"] }}_.

The analysis can be rerun with the following command:

.. code-block:: shell

   cd {{ snakemake.config["__workflow_workdir__"] }}
{% if snakemake.config["__workflow_basedir__"] == snakemake.config["__workflow_workdir__"] %}
   snakemake -j 1 --use-conda
{% else %}
   snakemake -j 1 --use-conda -s {{ snakemake.config["__workflow_basedir__"] }}/Snakefile
{% endif %}

.. note::

   Since the workflow is still work in progress, make sure to first
   run the commands with the `--dry-run` (`-n`) flag to make sure you
   don't inadvertedly have to regenerate large parts of the results.
   Many workflow dependencies are complex and in particular when
   running smaller parts of the workflow, unexpected things may
   happen.


Workflow summary
----------------

The workflow runs the following steps:

1. read trimming (optional)
2. read mapping
3. raw variant calling
4. variant filtering
5. calculation of population genomics statistics
6. multiple qc checks


Data organization
=================

.. code-block:: text

   {{ snakemake.config["__workflow_workdir__"] }}/                    <- top-level project folder
   |
   ├── config                   <- configuration directory for Snakemake and other things
   │
   ├── data
   │   ├── external             <- data from third party sources
   │   ├── interim              <- Intermediate data that can be safely deleted
   │   ├── metadata             <- metadata describing raw data files
   │   ├── processed            <- Final processed data used for analyses
   │   └── raw                  <- The original immutable data dump to be treated as read-only.
   │
   ├── logs                     <- Collection of log outputs, e.g. from cluster managers
   │
   ├── reports                  <- Generated analyses and articles as html, pdf and more.
   |   ├── qc                   <- QC reports, including multiqc.html
   │   └── figures              <- Graphics for use in reports.
   │
   └── results                  <- Final results for sharing with collaborators, typically derived from analysis sets
       └── qc                   <- QC results



Analysis overview
=================

The analyses can basically be divided in two parts: `Raw data
analysis`_ and `Analysis sets`_.

Raw data analysis
------------------

.. figure:: {{ snakemake.config["__workflow_basedir__"] }}/report/raw.svg
   :width: 30%
   :align: center

   Schematic overview of raw variant calling.

The raw data analysis generates raw unfiltered results that serve as a
starting point for subsequent analyses.



Analysis sets
--------------

Once raw data has been generated it can be further analyzed in
*analysis sets*. Each analysis set has a configuration section named
`analysis/[0-9a-zA-Z-_]+` with results for any given set ending up in
`results/ind` or `results/pool`.

An analysis set consists of *filters* that filter raw data and
*statistics* that generate statistics or plots of filtered data. The
entire analysis set can be configured to focus on prespecified
samples, regions, sex or populations.



General analyses
=================

The analyses in this section apply to both individuals and pools.

QC
--

{% if "qc" in snakemake.config["workflow"].keys() %}

Numerous QC analyses have been performed:

{% for q in snakemake.config["workflow"]["qc"] %}

* {{ q }}

{% endfor %}


The results are stored in ``results/qc`` and summarized in
multiqc.html_.

All QC results can be regenerated by running

.. code-block:: shell

   snakemake all_qc

{% else %}

No QC has been performed.

{% endif %}

Trimming
--------

{% if snakemake.config["workflow"]["trim"] %}

Trimming has been performed with cutadapt. All read trimming can be
run as

.. code-block:: shell

   snakemake all_qc


{% else %}

Trimming has not been performed.

{% endif %}


Read mapping
------------

bwa was used to map reads to the reference ``{{ snakemake.config["db"]["ref"] }}``.

All reads can be mapped as

.. code-block:: shell

   snakemake all_map


Analyses of individual samples
==============================

Summary
-------

Main variant result files are found in ``results/ind/rawvc/gatkhc/{stage}/``
where stage is either unfiltered, select or filter.

Raw variant calling (``rawvc``)
--------------------------------

gatkhc
~~~~~~

All GATK calls can be generated as:

.. code-block:: shell

   snakemake all_rawvc




{% if 'bcftools' in snakemake.config["workflow"]["variantcallers"]["ind"] %}

bcftools
~~~~~~~~

{% endif %}

{% if 'freebayes' in snakemake.config["workflow"]["variantcallers"]["ind"] %}

freebayes
~~~~~~~~~

{% endif %}


Analyses of pooled samples
==========================



Workflow graph
==============


.. _manticore-smk: https://github.com/NBISweden/manticore-smk
.. _multiqc.html: ./qc/multiqc.html
.. _{{ snakemake.config["__workflow_commit__"] }}: {{ snakemake.config["__workflow_commit_link__"] }}
