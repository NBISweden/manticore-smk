$schema: "http://json-schema.org/draft-07/schema#"

description: Various definitions

type: object

definitions:

  ##############################
  # Atomic properties for reuse in object properties
  ##############################

  options:
    description: program options represented as string, array or dictionary
    type: [string, array, object, 'null']
    items:
      type: string
    uniqueItems: true
  envmodules:
    description: environment module list
    type: array
    items:
      type: string
    uniqueItems: true
  java_options:
    description: options to pass to java interpreter
    type: string
  step_size:
    description: step size
    type: array
    minItems: 1
    items:
      type: integer
      minimum: 1
  window_size:
    description: window size
    type: array
    minItems: 1
    items:
      type: integer
      minimum: 1
  ploidy:
    description: >
        ploidy for region. Will be adjusted by pool size for pool
        calls. The ploidy keys also define sex levels.
    type: object
    properties:
      common:
        type: integer
        description: ploidy common to all sexes
      female:
        type: integer
        description: ploidy for females
      male:
        type: integer
        description: ploidy for males
      haploid:
        type: integer
        description: ploidy for haploids
    additionalProperties: false
  tool:
    type: string
    description: tool to run filter/statistic
    default: bcftools
    enum: ['gatk', 'bcftools', 'popoolation', 'popoolation2', 'python']
  group:
    type: string
    description: >-
      Description of sequencing strategy in terms of grouping, i.e.
      either individual or pooled sequencing
    enum:
      - ind
      - pool
  regions:
    type: array
    description: >-
      List of region names. The names must be defined in the
      workflow configuration section
    items:
      type: string
      uniqueItems: true
  sex:
    type: string
    description: Sample/unit sex.
    items:
      type: string
      uniqueItems: true
      enum: ['male', 'female', 'common', 'haploid']
  unitids:
    type: array
    description: >-
      List of unit ids/names. The sample ids must be defined in the
      'unit' column of a read samplesheet file or the 'SM' column in a
      samples samplesheet file
    items:
      type: string
      uniqueItems: true


  ##############################
  # File system layout
  ##############################

  fs:
    description: >
        file system layout; defines Path objects and wildcards for
        snakemake rules
    type: object
    default: {}
    properties:
      external:
        type: string
        default: data/external
      interim:
        type: string
        default: data/interim
      metadata:
        type: string
        default: data/metadata
      raw:
        type: string
        default: data/raw
      resources:
        type: string
        default: resources
    additionalProperties: false

  ##############################
  # Main workflow configuration
  ##############################

  workflow:
    title: Workflow configuration
    description: >
        Workflow configuration. Define high-level options that apply
        to workflow logic and execution
    type: object
    default: {}
    properties:
      variantcallers:
        description: Variant callers
        type: object
        default: {}
        properties:
          ind:
            description: Variant callers for individuals
            type: array
            default: ['gatkhc']
            uniqueItems: true
            items:
              type: string
              enum: ['gatkhc', 'freebayes', 'bcftools']
          pool:
            description: Variant callers for pools
            type: array
            uniqueItems: true
            default: ['popoolation']
            items:
              type: string
              enum: ['popoolation']
      regions:
        title: region definitions
        description: >
            key-value mapping of region name to bed file defining
            regions for region-based analyses. If no regions are
            provided, the default region *all* will be generated using
            the reference file
        type: object
        default: {}
        patternProperties:
          '^[a-zA-Z\-_0-9]+$':
            properties:
              description:
                description: description field
                type: string
              bed:
                description: filename for bed file defining regions
                type: string
                pattern: .+\.bed
                examples:
                  - data/metadata/all.bed
                  - data/metadata/autosomes.bed
                  - data/metadata/PAR.bed
              ploidy:
                $ref: "#/definitions/ploidy"
                default:
                  common: 2
              npart:
                description: define number of partitions for scatter-gather calls
                type: integer
                default: 1
          required:
            - description
            - bed
        additionalProperties: false
      trim:
        description: perform adapter trimming or not
        type: boolean
        default: true
      qc:
        description: qc programs to run on input and mapped data
        type: array
        default: ['picard', 'fastqc', 'qualimap', 'jellyfish', 'sambamba', 'bcftools']
        uniqueItems: true
        items:
          type: string
          enum:
            - picard
            - fastqc
            - qualimap
            - jellyfish
            - sambamba
            - bcftools
    additionalProperties: false

  ##############################
  # Database resources
  ##############################

  db:
    description: >
        Configuration for various database resources
    type: object
    default: {}
    properties:
      ref:
        description: Reference sequence name; path to sequence file
        type: string
        default: ""
      repeats:
        description: Bed file indicating repeat regions
        type: string
        pattern: (|.+\.bed$)
        default: ""
    additionalProperties: false


  ##############################
  # Rule definitions
  ##############################

  rule.config:
    title: Rule configuration
    description: generic configuration for rules
    type: object
    default: {}
    properties:
      options:
        $ref: "#/definitions/options"
      envmodules:
        $ref: "#/definitions/envmodules"

  ##############################
  # Java rule
  ##############################

  rule.java.config:
    title: Java rule configuration
    description: generic configuration for java rules
    type: object
    properties:
      options:
        $ref: "#/definitions/options"
      envmodules:
        $ref: "#/definitions/envmodules"
      java_options:
        $ref: "#/definitions/java_options"


  ##############################
  # Windowed rule
  ##############################

  rule.window.config:
    title: Windowed rule configuration
    description: generic configuration for rules that do sliding window analyses
    type: object
    properties:
      options:
        $ref: "#/definitions/options"
      envmodules:
        $ref: "#/definitions/envmodules"
      step_size:
        $ref: "#/definitions/step_size"
      window_size:
        $ref: "#/definitions/window_size"

  ##############################
  # Rules; defines property for the vast majority of workflow
  # rules. This section is reused in its entirety in
  # config.schema.yaml in the patternProperties property listing
  ##############################

  rules.config:
    title: Rule configuration
    description: >
      This schema defines rule schemas for all rules in the workflow.
    type: object
    default: {}
    # Rules with specific defaults must be listed explicitly
    properties:
      # Trimming rules
      trim_cutadapt_pe:
        default:
          adapters: -a AGATCGGAAGAGCACACGTCTGAACTCCAGTCA -A AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT
        $ref: "trim.schema.yaml#/definitions/rule.cutadapt.config"

      trim_cutadapt_se:
        default:
          adapters: -a AGATCGGAAGAGCACACGTCTGAACTCCAGTCA
        $ref: "trim.schema.yaml#/definitions/rule.cutadapt.config"

      map_bwa_mem:
        default: {}
        $ref: "map.schema.yaml#/definitions/map_bwa_mem"

      # QC rules
      qc_jellyfish:
        default: {}
        $ref: "tools.schema.yaml#/definitions/jellyfish.config"

      qc_jellyfish_count:
        default:
          options: -s 100M -C
        $ref: "#/definitions/rule.config"

      qc_picard_mark_duplicates:
        default:
          options: "-VALIDATION_STRINGENCY LENIENT -REMOVE_DUPLICATES true"
        $ref: "#/definitions/rule.config"

      popoolation_samtools_filter_mpileup:
        default:
          filter_options: -q 20
        $ref: "#/definitions/rule.config"

      popoolation_subsample_pileup:
        default:
          options:
            --method withoutreplace --fastq-type sanger --target-coverage 50 --max-coverage 100 --min-qual 20
        $ref: "#/definitions/rule.config"

      popoolation_variance_sliding:
        default:
          window_size: [50000]
          step_size: [50000]
        $ref: "popoolation.schema.yaml#/definitions/popoolation_variance_sliding"

      qc_picard_collect_alignment_summary_metrics:
        default:
          options: "VALIDATION_STRINGENCY=LENIENT METRIC_ACCUMULATION_LEVEL=null METRIC_ACCUMULATION_LEVEL=SAMPLE"
        $ref: "#/definitions/rule.config"

      qc_picard_collect_insert_size_metrics:
        default:
          options: "VALIDATION_STRINGENCY=LENIENT METRIC_ACCUMULATION_LEVEL=null METRIC_ACCUMULATION_LEVEL=SAMPLE"
        $ref: "#/definitions/rule.config"

      rawvc_gatkhc_targets:
        default: {}
        $ref: "rawvc.schema.yaml#/definitions/rule.gatk.annotation"

      rawvc_gatk_genotype_gvcfs:
        default: {}
        $ref: "rawvc.schema.yaml#/definitions/rule.gatk.annotation"

    ##############################
    # patternProperties: only for validation; not possible to set defaults
    ##############################
    patternProperties:
      ^(filter_bcftools_concat_vcfs|statistic_windowed_vcf)$:
        $ref: "#/definitions/rule.config"

      ^qc_(multiqc|fastqc|jellyfish_histo|qualimap_bamqc_pe|qualimap_bamqc_se|sambamba_depth|bcftools_stats)$:
        description: qc rule configuration
        $ref: "#/definitions/rule.config"

      ^map_(samtools_faidx_ref|samtools_index|bwa_index|picard_merge_sam)$:
        description: map rules
        $ref: "#/definitions/rule.config"

      ^rawvc_(picard_create_sequence_dictionary|gatk_genomics_db_import|picard_merge_vcfs_targets)$:
        description: rawvc java rules
        $ref: "#/definitions/rule.java.config"

      ^rawvc_(samtools_faidx_ref|bcftools_concat_vcfs_targets)$:
        description: rawvc rules
        $ref: "#/definitions/rule.config"

      ^filter_(vcf_select|vcf_filter|vcf_convert|vcf_concat|vcf_mask|gatk_select_variants)$:
        $ref: "#/definitions/rule.java.config"

      ^filter_(gatk_variant_JEXL_filtration|gatk_jexl_filter_variants)$:
        $ref: "variantfilter.schema.yaml#/definitions/rule.java.gatk.filter.config"

      ^popoolation_(filter_pileup_by_gtf|gather_parallel_results)$:
        $ref: "#/definitions/rule.config"

      ^popoolation2_(samtools_mpileup|indel_filtering_identify_indel_regions|gather_parallel_results|indel_filtering_filter_sync_by_gtf|indel_filtering_remove_indels|subsample_synchronized|snp_frequency_diff)$:
        $ref: "#/definitions/rule.config"

      ^popoolation2_(mpileup2sync_jar)$:
        $ref: "#/definitions/rule.java.config"

      ^popoolation2_(fst_sliding|fisher_test)$:
        $ref: "#/definitions/rule.window.config"
